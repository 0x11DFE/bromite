From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Wed, 15 May 2019 17:08:35 +0200
Subject: Remove recent tabs signin

---
 .../chrome/browser/signin/SigninManager.java       | 73 ++--------------------
 .../android/signin/signin_manager_android.cc       |  3 +-
 2 files changed, 7 insertions(+), 69 deletions(-)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninManager.java b/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninManager.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninManager.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninManager.java
@@ -27,10 +27,7 @@ import org.chromium.base.metrics.RecordUserAction;
 import org.chromium.base.task.PostTask;
 import org.chromium.chrome.browser.externalauth.ExternalAuthUtils;
 import org.chromium.chrome.browser.externalauth.UserRecoverableErrorHandler;
-import org.chromium.components.signin.AccountIdProvider;
 import org.chromium.components.signin.AccountManagerFacade;
-import org.chromium.components.signin.AccountTrackerService;
-import org.chromium.components.signin.ChromeSigninController;
 import org.chromium.components.sync.AndroidSyncSettings;
 import org.chromium.content_public.browser.UiThreadTaskTraits;
 
@@ -47,7 +44,7 @@ import java.util.List;
  * <p/>
  * See chrome/browser/signin/signin_manager_android.h for more details.
  */
-public class SigninManager implements AccountTrackerService.OnSystemAccountsSeededListener {
+public class SigninManager {
     private static final String TAG = "SigninManager";
 
     /**
@@ -183,7 +180,6 @@ public class SigninManager implements AccountTrackerService.OnSystemAccountsSeed
      */
     private long mNativeSigninManagerAndroid;
     private final Context mContext;
-    private final AccountTrackerService mAccountTrackerService;
     private final AndroidSyncSettings mAndroidSyncSettings;
     private final ObserverList<SignInStateObserver> mSignInStateObservers = new ObserverList<>();
     private final ObserverList<SignInAllowedObserver> mSignInAllowedObservers =
@@ -219,28 +215,24 @@ public class SigninManager implements AccountTrackerService.OnSystemAccountsSeed
      */
     @CalledByNative
     private static SigninManager create(
-            long nativeSigninManagerAndroid, AccountTrackerService accountTrackerService) {
+            long nativeSigninManagerAndroid) {
         assert nativeSigninManagerAndroid != 0;
-        assert accountTrackerService != null;
         return new SigninManager(ContextUtils.getApplicationContext(), nativeSigninManagerAndroid,
-                accountTrackerService, AndroidSyncSettings.get());
+                AndroidSyncSettings.get());
     }
 
     @VisibleForTesting
     SigninManager(Context context, long nativeSigninManagerAndroid,
-            AccountTrackerService accountTrackerService, AndroidSyncSettings androidSyncSettings) {
+            AndroidSyncSettings androidSyncSettings) {
         ThreadUtils.assertOnUiThread();
         assert context != null;
         assert androidSyncSettings != null;
         mContext = context;
         mNativeSigninManagerAndroid = nativeSigninManagerAndroid;
-        mAccountTrackerService = accountTrackerService;
         mAndroidSyncSettings = androidSyncSettings;
 
         mSigninAllowedByPolicy =
                 SigninManagerJni.get().isSigninAllowedByPolicy(mNativeSigninManagerAndroid);
-
-        mAccountTrackerService.addSystemAccountsSeededListener(this);
     }
 
     /**
@@ -249,7 +241,6 @@ public class SigninManager implements AccountTrackerService.OnSystemAccountsSeed
      */
     @CalledByNative
     public void destroy() {
-        mAccountTrackerService.removeSystemAccountsSeededListener(this);
         mNativeSigninManagerAndroid = 0;
     }
 
@@ -286,8 +277,7 @@ public class SigninManager implements AccountTrackerService.OnSystemAccountsSeed
      * Returns true if signin can be started now.
      */
     public boolean isSignInAllowed() {
-        return !mFirstRunCheckIsPending && mSignInState == null && mSigninAllowedByPolicy
-                && ChromeSigninController.get().getSignedInUser() == null && isSigninSupported();
+	return false;
     }
 
     /**
@@ -344,27 +334,6 @@ public class SigninManager implements AccountTrackerService.OnSystemAccountsSeed
     }
 
     /**
-    * Continue pending sign in after system accounts have been seeded into AccountTrackerService.
-    */
-    @Override
-    public void onSystemAccountsSeedingComplete() {
-        if (mSignInState != null && mSignInState.mBlockedOnAccountSeeding) {
-            mSignInState.mBlockedOnAccountSeeding = false;
-            progressSignInFlowCheckPolicy();
-        }
-    }
-
-    /**
-    * Clear pending sign in when system accounts in AccountTrackerService were refreshed.
-    */
-    @Override
-    public void onSystemAccountsChanged() {
-        if (mSignInState != null) {
-            abortSignIn();
-        }
-    }
-
-    /**
      * Starts the sign-in flow, and executes the callback when finished.
      *
      * If an activity is provided, it is considered an "interactive" sign-in and the user can be
@@ -419,16 +388,7 @@ public class SigninManager implements AccountTrackerService.OnSystemAccountsSeed
     }
 
     private void progressSignInFlowSeedSystemAccounts() {
-        if (mAccountTrackerService.checkAndSeedSystemAccounts()) {
-            progressSignInFlowCheckPolicy();
-        } else if (AccountIdProvider.getInstance().canBeUsed()) {
-            mSignInState.mBlockedOnAccountSeeding = true;
-        } else {
-            Activity activity = mSignInState.mActivity;
-            handleGooglePlayServicesUnavailability(activity, !isForceSigninEnabled());
-            Log.w(TAG, "Cancelling the sign-in process as Google Play services is unavailable");
-            abortSignIn();
-        }
+        mSignInState.mBlockedOnAccountSeeding = true;
     }
 
     /**
@@ -462,18 +422,6 @@ public class SigninManager implements AccountTrackerService.OnSystemAccountsSeed
         // This method should be called at most once per sign-in flow.
         assert mSignInState != null;
 
-        if (!SigninManagerJni.get().setPrimaryAccount(
-                    mNativeSigninManagerAndroid, mSignInState.mAccount.name)) {
-            Log.w(TAG, "Failed to set the PrimaryAccount in IdentityManager, aborting signin");
-            abortSignIn();
-            return;
-        }
-
-        // Cache the signed-in account name. This must be done after the native call, otherwise
-        // sync tries to start without being signed in natively and crashes.
-        ChromeSigninController.get().setSignedInAccountName(mSignInState.mAccount.name);
-        enableSync(mSignInState.mAccount);
-
         if (mSignInState.mCallback != null) {
             mSignInState.mCallback.onSignInComplete();
         }
@@ -640,10 +588,8 @@ public class SigninManager implements AccountTrackerService.OnSystemAccountsSeed
 
         // Native sign-out must happen before resetting the account so data is deleted correctly.
         // http://crbug.com/589028
-        ChromeSigninController.get().setSignedInAccountName(null);
         if (mSignOutState.mWipeDataHooks != null) mSignOutState.mWipeDataHooks.preWipeData();
         disableSyncAndWipeData(mSignOutState.mShouldWipeUserData, this::onProfileDataWiped);
-        mAccountTrackerService.invalidateAccountSeedStatus(true);
     }
 
     @VisibleForTesting
@@ -719,13 +665,6 @@ public class SigninManager implements AccountTrackerService.OnSystemAccountsSeed
         SigninManagerJni.get().stopApplyingCloudPolicy(mNativeSigninManagerAndroid);
     }
 
-    private void enableSync(Account account) {
-        // Cache the signed-in account name. This must be done after the native call, otherwise
-        // sync tries to start without being signed in the native code and crashes.
-        mAndroidSyncSettings.updateAccount(account);
-        mAndroidSyncSettings.enableChromeSync();
-    }
-
     private void disableSyncAndWipeData(
             boolean shouldWipeUserData, final Runnable wipeDataCallback) {
         mAndroidSyncSettings.updateAccount(null);
diff --git a/chrome/browser/android/signin/signin_manager_android.cc b/chrome/browser/android/signin/signin_manager_android.cc
--- a/chrome/browser/android/signin/signin_manager_android.cc
+++ b/chrome/browser/android/signin/signin_manager_android.cc
@@ -145,8 +145,7 @@ SigninManagerAndroid::SigninManagerAndroid(
                              g_browser_process->local_state());
 
   java_signin_manager_ = Java_SigninManager_create(
-      base::android::AttachCurrentThread(), reinterpret_cast<intptr_t>(this),
-      identity_manager_->LegacyGetAccountTrackerServiceJavaObject());
+      base::android::AttachCurrentThread(), reinterpret_cast<intptr_t>(this));
 }
 
 base::android::ScopedJavaLocalRef<jobject>
-- 
2.11.0

