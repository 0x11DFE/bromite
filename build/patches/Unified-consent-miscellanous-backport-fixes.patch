From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Wed, 18 Dec 2019 23:54:37 +0100
Subject: Unified consent miscellanous backport fixes

---
 .../privacy/PrivacyPreferences.java           | 52 ++-----------------
 .../preferences/sync/SyncPreferenceUtils.java |  3 --
 .../sync/SyncNotificationController.java      | 12 ++---
 3 files changed, 6 insertions(+), 61 deletions(-)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/preferences/privacy/PrivacyPreferences.java b/chrome/android/java/src/org/chromium/chrome/browser/preferences/privacy/PrivacyPreferences.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/preferences/privacy/PrivacyPreferences.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/preferences/privacy/PrivacyPreferences.java
@@ -9,7 +9,6 @@ import android.support.graphics.drawable.VectorDrawableCompat;
 import android.support.v7.preference.CheckBoxPreference;
 import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceFragmentCompat;
-import android.support.v7.preference.PreferenceScreen;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
@@ -45,7 +44,6 @@ public class PrivacyPreferences
     private static final String PREF_CONTEXTUAL_SEARCH = "contextual_search";
     private static final String PREF_NETWORK_PREDICTIONS = "preload_pages";
     private static final String PREF_DO_NOT_TRACK = "do_not_track";
-    private static final String PREF_USAGE_AND_CRASH_REPORTING = "usage_and_crash_reports";
     private static final String PREF_CLEAR_BROWSING_DATA = "clear_browsing_data";
     private static final String PREF_SYNC_AND_SERVICES_LINK_DIVIDER =
             "sync_and_services_link_divider";
@@ -56,13 +54,10 @@ public class PrivacyPreferences
 
     @Override
     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
-        PrivacyPreferencesManager privacyPrefManager = PrivacyPreferencesManager.getInstance();
-        privacyPrefManager.migrateNetworkPredictionPreferences();
         PreferenceUtils.addPreferencesFromResource(this, R.xml.privacy_preferences);
         getActivity().setTitle(R.string.prefs_privacy);
         setHasOptionsMenu(true);
         PrefServiceBridge prefServiceBridge = PrefServiceBridge.getInstance();
-        PreferenceScreen preferenceScreen = getPreferenceScreen();
 
         mManagedPreferenceDelegate = createManagedPreferenceDelegate();
 
@@ -76,41 +71,8 @@ public class PrivacyPreferences
         networkPredictionPref.setOnPreferenceChangeListener(this);
         networkPredictionPref.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
 
-        if (ChromeFeatureList.isEnabled(ChromeFeatureList.UNIFIED_CONSENT)) {
-            // Remove preferences that were migrated to SyncAndServicesPreferences.
-            preferenceScreen.removePreference(findPreference(PREF_NAVIGATION_ERROR));
-            preferenceScreen.removePreference(findPreference(PREF_SEARCH_SUGGESTIONS));
-            preferenceScreen.removePreference(findPreference(PREF_SAFE_BROWSING_SCOUT_REPORTING));
-            preferenceScreen.removePreference(findPreference(PREF_SAFE_BROWSING));
-            preferenceScreen.removePreference(findPreference(PREF_CONTEXTUAL_SEARCH));
-            preferenceScreen.removePreference(findPreference(PREF_USAGE_AND_CRASH_REPORTING));
-
-            // TODO(https://crbug.com/846376): Update strings in XML after UNIFIED_CONSENT launch.
-            networkPredictionPref.setTitle(R.string.preload_pages_title);
-            networkPredictionPref.setSummary(R.string.preload_pages_summary);
-
-            // Put networkPredictionPref after canMakePaymentPref by overriding order value.
-            // However, calling setOrder doesn't change existing order if Preference has already
-            // been added to PreferenceGroup. Remove and re-add it to work around this.
-            // TODO(https://crbug.com/846376): Reorder prefs in XML after UNIFIED_CONSENT launch.
-            preferenceScreen.removePreference(networkPredictionPref);
-            networkPredictionPref.setOrder(canMakePaymentPref.getOrder());
-            preferenceScreen.addPreference(networkPredictionPref);
-
-            Preference syncAndServicesLink = findPreference(PREF_SYNC_AND_SERVICES_LINK);
-            NoUnderlineClickableSpan linkSpan = new NoUnderlineClickableSpan(getResources(), view -> {
-                PreferencesLauncher.launchSettingsPage(getActivity(), SyncAndServicesPreferences.class,
-                        SyncAndServicesPreferences.createArguments(false));
-            });
-            syncAndServicesLink.setSummary(
-                    SpanApplier.applySpans(getString(R.string.privacy_sync_and_services_link),
-                            new SpanApplier.SpanInfo("<link>", "</link>", linkSpan)));
-
-            updateSummaries();
-            return;
-        }
-        preferenceScreen.removePreference(findPreference(PREF_SYNC_AND_SERVICES_LINK_DIVIDER));
-        preferenceScreen.removePreference(findPreference(PREF_SYNC_AND_SERVICES_LINK));
+        getPreferenceScreen().removePreference(findPreference(PREF_SYNC_AND_SERVICES_LINK_DIVIDER));
+        getPreferenceScreen().removePreference(findPreference(PREF_SYNC_AND_SERVICES_LINK));
 
         ChromeBaseCheckBoxPreference navigationErrorPref =
                 (ChromeBaseCheckBoxPreference) findPreference(PREF_NAVIGATION_ERROR);
@@ -123,7 +85,7 @@ public class PrivacyPreferences
         searchSuggestionsPref.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
 
         if (!ContextualSearchFieldTrial.isEnabled()) {
-            preferenceScreen.removePreference(findPreference(PREF_CONTEXTUAL_SEARCH));
+            getPreferenceScreen().removePreference(findPreference(PREF_CONTEXTUAL_SEARCH));
         }
 
         // Listen to changes to the Extended Reporting pref.
@@ -176,7 +138,6 @@ public class PrivacyPreferences
      */
     public void updateSummaries() {
         PrefServiceBridge prefServiceBridge = PrefServiceBridge.getInstance();
-        PrivacyPreferencesManager privacyPrefManager = PrivacyPreferencesManager.getInstance();
 
         CharSequence textOn = getActivity().getResources().getText(R.string.text_on);
         CharSequence textOff = getActivity().getResources().getText(R.string.text_off);
@@ -226,13 +187,6 @@ public class PrivacyPreferences
             contextualPref.setSummary(isContextualSearchEnabled ? textOn : textOff);
         }
 
-        Preference usageAndCrashPref = findPreference(PREF_USAGE_AND_CRASH_REPORTING);
-        if (usageAndCrashPref != null) {
-            usageAndCrashPref.setSummary(
-                    privacyPrefManager.isUsageAndCrashReportingPermittedByUser() ? textOn
-                                                                                 : textOff);
-        }
-
         Preference usageStatsPref = findPreference(PREF_USAGE_STATS);
         if (usageStatsPref != null) {
             if (BuildInfo.isAtLeastQ() && prefServiceBridge.getBoolean(Pref.USAGE_STATS_ENABLED)) {
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/preferences/sync/SyncPreferenceUtils.java b/chrome/android/java/src/org/chromium/chrome/browser/preferences/sync/SyncPreferenceUtils.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/preferences/sync/SyncPreferenceUtils.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/preferences/sync/SyncPreferenceUtils.java
@@ -118,9 +118,6 @@ public class SyncPreferenceUtils {
             if (profileSyncService.isPassphraseRequiredForPreferredDataTypes()) {
                 return res.getString(R.string.sync_need_passphrase);
             }
-            if (ChromeFeatureList.isEnabled(ChromeFeatureList.UNIFIED_CONSENT)) {
-                return context.getString(R.string.sync_and_services_summary_sync_on);
-            }
             return context.getString(R.string.account_management_sync_summary, accountName);
         }
         return context.getString(R.string.sync_is_disabled);
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/sync/SyncNotificationController.java b/chrome/android/java/src/org/chromium/chrome/browser/sync/SyncNotificationController.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/sync/SyncNotificationController.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/sync/SyncNotificationController.java
@@ -157,15 +157,9 @@ public class SyncNotificationController implements ProfileSyncService.SyncStateC
      * @return the intent for opening the settings
      */
     private Intent createSettingsIntent() {
-        final String fragmentName;
-        final Bundle fragmentArguments;
-        if (ChromeFeatureList.isEnabled(ChromeFeatureList.UNIFIED_CONSENT)) {
-            fragmentName = SyncAndServicesPreferences.class.getName();
-            fragmentArguments = SyncAndServicesPreferences.createArguments(false);
-        } else {
-            fragmentName = AccountManagementFragment.class.getName();
-            fragmentArguments = null;
-        }
+        final String fragmentName = AccountManagementFragment.class.getName();
+        final Bundle fragmentArguments = null;
+
         return PreferencesLauncher.createIntentForSettingsPage(
                 ContextUtils.getApplicationContext(), fragmentName, fragmentArguments);
     }
-- 
2.17.1

