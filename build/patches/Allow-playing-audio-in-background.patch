From: AlexeyBarabash <alexey@brave.com>
Date: Thu, 2 Nov 2017 18:21:16 +0200
Subject: Allow playing audio in background

---
 chrome/browser/about_flags.cc      |  4 ++++
 media/blink/webmediaplayer_impl.cc | 12 +++++++++++-
 media/blink/webmediaplayer_impl.h  |  2 ++
 3 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/chrome/browser/about_flags.cc b/chrome/browser/about_flags.cc
--- a/chrome/browser/about_flags.cc
+++ b/chrome/browser/about_flags.cc
@@ -1423,6 +1423,10 @@ const FeatureEntry kFeatureEntries[] = {
     {"debug-packed-apps", flag_descriptions::kDebugPackedAppName,
      flag_descriptions::kDebugPackedAppDescription, kOsDesktop,
      SINGLE_VALUE_TYPE(switches::kDebugPackedApps)},
+    {"resume-background-video",
+     flag_descriptions::kResumeBackgroundVideoName,
+     flag_descriptions::kResumeBackgroundVideoDescription, kOsAll,
+     FEATURE_VALUE_TYPE(media::kResumeBackgroundVideo)},
     {"automatic-password-generation",
      flag_descriptions::kAutomaticPasswordGenerationName,
      flag_descriptions::kAutomaticPasswordGenerationDescription, kOsAll,
diff --git a/media/blink/webmediaplayer_impl.cc b/media/blink/webmediaplayer_impl.cc
--- a/media/blink/webmediaplayer_impl.cc
+++ b/media/blink/webmediaplayer_impl.cc
@@ -961,6 +961,12 @@ bool WebMediaPlayerImpl::HasAudio() const {
   return pipeline_metadata_.has_audio;
 }
 
+bool WebMediaPlayerImpl::HasVideoNonEmptySize() const {
+  DCHECK(main_task_runner_->BelongsToCurrentThread());
+
+  return pipeline_metadata_.has_video && pipeline_metadata_.natural_size.width() != 0 && pipeline_metadata_.natural_size.height() != 0;
+}
+
 void WebMediaPlayerImpl::EnabledAudioTracksChanged(
     const blink::WebVector<blink::WebMediaPlayer::TrackId>& enabledTrackIds) {
   DCHECK(main_task_runner_->BelongsToCurrentThread());
@@ -3205,7 +3211,11 @@ bool WebMediaPlayerImpl::ShouldPausePlaybackWhenHidden() const {
   // Audio only stream is allowed to play when in background.
   // TODO: We should check IsBackgroundOptimizationCandidate here. But we need
   // to move the logic of checking video frames out of that function.
-  if (!HasVideo())
+
+  //pipeline_metadata_.has_video is true for MediaPlayerRenderer,
+  //see media/base/pipeline_metadata.h. This is a workaround to allow audio
+  //streams be played in background.
+  if (!HasVideoNonEmptySize())
     return false;
 
   if (!is_background_video_playback_enabled_)
diff --git a/media/blink/webmediaplayer_impl.h b/media/blink/webmediaplayer_impl.h
--- a/media/blink/webmediaplayer_impl.h
+++ b/media/blink/webmediaplayer_impl.h
@@ -142,6 +142,8 @@ class MEDIA_BLINK_EXPORT WebMediaPlayerImpl
   // True if the loaded media has a playable video/audio track.
   bool HasVideo() const override;
   bool HasAudio() const override;
+  // True is has video and it's frame size is not zero
+  bool HasVideoNonEmptySize() const;
 
   void EnabledAudioTracksChanged(
       const blink::WebVector<blink::WebMediaPlayer::TrackId>& enabledTrackIds)
-- 
2.11.0

