From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Sat, 26 Sep 2020 14:23:19 +0100
Subject: Enable DoH

---
 .../browser/net/stub_resolver_config_reader.cc  | 17 +----------------
 .../privacy/secure_dns/SecureDnsBridge.java     |  2 +-
 chrome/common/chrome_features.cc                |  4 ++--
 3 files changed, 4 insertions(+), 19 deletions(-)

diff --git a/chrome/browser/net/stub_resolver_config_reader.cc b/chrome/browser/net/stub_resolver_config_reader.cc
--- a/chrome/browser/net/stub_resolver_config_reader.cc
+++ b/chrome/browser/net/stub_resolver_config_reader.cc
@@ -153,7 +153,7 @@ StubResolverConfigReader::StubResolverConfigReader(PrefService* local_state,
       if (entries.count("dns-over-https@1")) {
         // The user has "Enabled" selected.
         local_state_->SetString(prefs::kDnsOverHttpsMode,
-                                SecureDnsConfig::kModeAutomatic);
+                                SecureDnsConfig::kModeSecure);
       } else if (entries.count("dns-over-https@2")) {
         // The user has "Disabled" selected.
         local_state_->SetString(prefs::kDnsOverHttpsMode,
@@ -327,22 +327,7 @@ SecureDnsConfig StubResolverConfigReader::GetAndUpdateConfiguration(
     check_parental_controls = false;
   }
 
-  // Check parental controls last because it can be expensive and should only be
-  // checked if necessary for the otherwise-determined mode.
   if (check_parental_controls) {
-    if (ShouldDisableDohForParentalControls()) {
-      forced_management_mode =
-          SecureDnsConfig::ManagementMode::kDisabledParentalControls;
-      secure_dns_mode = net::DnsConfig::SecureDnsMode::OFF;
-      mode_details =
-          SecureDnsModeDetailsForHistogram::kOffByDetectedParentalControls;
-
-      // If parental controls had not previously been checked, need to update
-      // network service.
-      if (!parental_controls_checked_)
-        update_network_service = true;
-    }
-
     parental_controls_checked_ = true;
   }
 
diff --git a/chrome/browser/privacy/java/src/org/chromium/chrome/browser/privacy/secure_dns/SecureDnsBridge.java b/chrome/browser/privacy/java/src/org/chromium/chrome/browser/privacy/secure_dns/SecureDnsBridge.java
--- a/chrome/browser/privacy/java/src/org/chromium/chrome/browser/privacy/secure_dns/SecureDnsBridge.java
+++ b/chrome/browser/privacy/java/src/org/chromium/chrome/browser/privacy/secure_dns/SecureDnsBridge.java
@@ -46,7 +46,7 @@ class SecureDnsBridge {
         // Must match features::kDnsOverHttpsShowUiParam.
         final String showUiParam = "ShowUi";
         // Must match the default value for this param.
-        final boolean showUiParamDefault = false;
+        final boolean showUiParamDefault = true;
 
         return ChromeFeatureList.getFieldTrialParamByFeatureAsBoolean(
                 ChromeFeatureList.DNS_OVER_HTTPS, showUiParam, showUiParamDefault);
diff --git a/chrome/common/chrome_features.cc b/chrome/common/chrome_features.cc
--- a/chrome/common/chrome_features.cc
+++ b/chrome/common/chrome_features.cc
@@ -263,7 +263,7 @@ const base::Feature kDesktopPWAsWithoutExtensions{
 
 // Enable DNS over HTTPS (DoH).
 const base::Feature kDnsOverHttps{"DnsOverHttps",
-                                  base::FEATURE_DISABLED_BY_DEFAULT};
+                                  base::FEATURE_ENABLED_BY_DEFAULT};
 
 // Provides a mechanism to remove providers from the dropdown list in the
 // settings UI. Separate multiple provider ids with commas. See the
@@ -278,7 +278,7 @@ const base::FeatureParam<bool> kDnsOverHttpsFallbackParam{&kDnsOverHttps,
 
 // Sets whether the DoH setting is displayed in the settings UI.
 const base::FeatureParam<bool> kDnsOverHttpsShowUiParam{&kDnsOverHttps,
-                                                        "ShowUi", false};
+                                                        "ShowUi", true};
 
 // Supply one or more space-separated DoH server URI templates to use when this
 // feature is enabled. If no templates are specified, then a hardcoded mapping
-- 
2.17.1

