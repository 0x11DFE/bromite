From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Wed, 21 Feb 2018 00:32:09 +0100
Subject: Use 4 tile rows, never show logo

---
 .../java/src/org/chromium/chrome/browser/ntp/NewTabPageLayout.java  | 6 +++---
 .../chromium/chrome/browser/suggestions/MostVisitedSitesBridge.java | 2 +-
 .../src/org/chromium/chrome/browser/suggestions/SiteSection.java    | 2 +-
 components/history/core/browser/top_sites_impl.cc                   | 2 +-
 components/history/core/browser/top_sites_impl.h                    | 4 ++--
 components/ntp_snippets/bookmarks/bookmark_suggestions_provider.cc  | 2 +-
 6 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ntp/NewTabPageLayout.java b/chrome/android/java/src/org/chromium/chrome/browser/ntp/NewTabPageLayout.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/ntp/NewTabPageLayout.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ntp/NewTabPageLayout.java
@@ -117,7 +117,7 @@ public class NewTabPageLayout extends LinearLayout implements TileGroup.Observer
     /** Observer for overview mode. */
     private EmptyOverviewModeObserver mOverviewObserver;
 
-    private boolean mSearchProviderHasLogo = true;
+    private boolean mSearchProviderHasLogo = false;
     private boolean mSearchProviderIsGoogle;
 
     private boolean mInitialized;
@@ -548,7 +548,7 @@ public class NewTabPageLayout extends LinearLayout implements TileGroup.Observer
                 && mInitialized) {
             return;
         }
-        mSearchProviderHasLogo = hasLogo;
+        mSearchProviderHasLogo = false;
         mSearchProviderIsGoogle = isGoogle;
 
         updateTileGridPadding();
@@ -831,7 +831,7 @@ public class NewTabPageLayout extends LinearLayout implements TileGroup.Observer
     }
 
     private static int getMaxTileRows() {
-        return 2;
+        return 4;
     }
 
     /**
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/suggestions/MostVisitedSitesBridge.java b/chrome/android/java/src/org/chromium/chrome/browser/suggestions/MostVisitedSitesBridge.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/suggestions/MostVisitedSitesBridge.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/suggestions/MostVisitedSitesBridge.java
@@ -27,7 +27,7 @@ public class MostVisitedSitesBridge
      * Maximum number of tiles that is explicitly supported. UMA relies on this value, so even if
      * the UI supports it, getting more can raise unexpected issues.
      */
-    public static final int MAX_TILE_COUNT = 12;
+    public static final int MAX_TILE_COUNT = 12 * 2;
 
     private long mNativeMostVisitedSitesBridge;
 
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/suggestions/SiteSection.java b/chrome/android/java/src/org/chromium/chrome/browser/suggestions/SiteSection.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/suggestions/SiteSection.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/suggestions/SiteSection.java
@@ -110,7 +110,7 @@ public class SiteSection extends OptionalLeaf implements TileGroup.Observer {
         if (ChromeFeatureList.isEnabled(ChromeFeatureList.EXPLORE_SITES)) {
             return 1;
         }
-        return 2;
+        return 4;
     }
 
     @LayoutRes
diff --git a/components/history/core/browser/top_sites_impl.cc b/components/history/core/browser/top_sites_impl.cc
--- a/components/history/core/browser/top_sites_impl.cc
+++ b/components/history/core/browser/top_sites_impl.cc
@@ -83,7 +83,7 @@ bool DoTitlesDiffer(const MostVisitedURLList& old_list,
 
 // Max number of temporary images we'll cache. See comment above
 // temp_images_ for details.
-const size_t kMaxTempTopImages = 8;
+const size_t kMaxTempTopImages = 8 * 2;
 
 // The delay for the first HistoryService query at startup.
 constexpr base::TimeDelta kFirstDelayAtStartup =
diff --git a/components/history/core/browser/top_sites_impl.h b/components/history/core/browser/top_sites_impl.h
--- a/components/history/core/browser/top_sites_impl.h
+++ b/components/history/core/browser/top_sites_impl.h
@@ -60,10 +60,10 @@ class TopSitesImpl : public TopSites, public HistoryServiceObserver {
   using CanAddURLToHistoryFn = base::Callback<bool(const GURL&)>;
 
   // How many non-forced top sites to store in the cache.
-  static constexpr size_t kNonForcedTopSitesNumber = 10;
+  static constexpr size_t kNonForcedTopSitesNumber = 4 * 4 + 2;
 
   // How many forced top sites to store in the cache.
-  static constexpr size_t kForcedTopSitesNumber = 10;
+  static constexpr size_t kForcedTopSitesNumber = 4 * 4 + 2;
 
   TopSitesImpl(PrefService* pref_service,
                HistoryService* history_service,
diff --git a/components/ntp_snippets/bookmarks/bookmark_suggestions_provider.cc b/components/ntp_snippets/bookmarks/bookmark_suggestions_provider.cc
--- a/components/ntp_snippets/bookmarks/bookmark_suggestions_provider.cc
+++ b/components/ntp_snippets/bookmarks/bookmark_suggestions_provider.cc
@@ -30,7 +30,7 @@ namespace ntp_snippets {
 
 namespace {
 
-const int kMaxBookmarks = 10;
+const int kMaxBookmarks = 4 * 4 + 2;
 const int kMaxBookmarkAgeInDays = 7;
 
 const char* kMaxBookmarksParamName = "bookmarks_max_count";
-- 
2.11.0

