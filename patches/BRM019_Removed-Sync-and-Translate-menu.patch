From: Serg <serg.zhukovsky@gmail.com>
Date: Wed, 22 Mar 2017 19:10:30 -0400
Subject: Removed Sync and Translate menu

---
 .../java/res/drawable-hdpi/settings_translate.png  | Bin 399 -> 0 bytes
 .../java/res/drawable-mdpi/settings_translate.png  | Bin 284 -> 0 bytes
 .../java/res/drawable-xhdpi/settings_translate.png | Bin 547 -> 0 bytes
 .../res/drawable-xxhdpi/settings_translate.png     | Bin 793 -> 0 bytes
 .../res/drawable-xxxhdpi/settings_translate.png    | Bin 1038 -> 0 bytes
 .../java/res/xml/site_settings_preferences.xml     |   8 +++----
 .../website/SiteSettingsPreferences.java           |  26 ++++++++++-----------
 headless/lib/browser/protocol/browser_handler.cc   |   2 +-
 8 files changed, 18 insertions(+), 18 deletions(-)
 delete mode 100644 chrome/android/java/res/drawable-hdpi/settings_translate.png
 delete mode 100644 chrome/android/java/res/drawable-mdpi/settings_translate.png
 delete mode 100644 chrome/android/java/res/drawable-xhdpi/settings_translate.png
 delete mode 100644 chrome/android/java/res/drawable-xxhdpi/settings_translate.png
 delete mode 100644 chrome/android/java/res/drawable-xxxhdpi/settings_translate.png

diff --git a/chrome/android/java/res/drawable-hdpi/settings_translate.png b/chrome/android/java/res/drawable-hdpi/settings_translate.png
deleted file mode 100644
index 8067680e81c6ffa1a003c579411173827a3a9f96..0000000000000000000000000000000000000000
diff --git a/chrome/android/java/res/drawable-mdpi/settings_translate.png b/chrome/android/java/res/drawable-mdpi/settings_translate.png
deleted file mode 100644
index 3b9b4cd482d36a60d4ff0a110b0bcefabe4c1060..0000000000000000000000000000000000000000
diff --git a/chrome/android/java/res/drawable-xhdpi/settings_translate.png b/chrome/android/java/res/drawable-xhdpi/settings_translate.png
deleted file mode 100644
index 131a57394ca30dcff4bebcb2471bbbf0e1ac134e..0000000000000000000000000000000000000000
diff --git a/chrome/android/java/res/drawable-xxhdpi/settings_translate.png b/chrome/android/java/res/drawable-xxhdpi/settings_translate.png
deleted file mode 100644
index 55878e697b1afed1b4f039a561dc6212e24fc024..0000000000000000000000000000000000000000
diff --git a/chrome/android/java/res/drawable-xxxhdpi/settings_translate.png b/chrome/android/java/res/drawable-xxxhdpi/settings_translate.png
deleted file mode 100644
index 058b50b84dd216d983e9dea2ea264b39773ac318..0000000000000000000000000000000000000000
diff --git a/chrome/android/java/res/xml/site_settings_preferences.xml b/chrome/android/java/res/xml/site_settings_preferences.xml
index afb425b..a545372 100644
--- a/chrome/android/java/res/xml/site_settings_preferences.xml
+++ b/chrome/android/java/res/xml/site_settings_preferences.xml
@@ -44,9 +44,9 @@
         android:fragment="org.chromium.chrome.browser.preferences.website.SingleCategoryPreferences"
         android:key="ads" />
     <!-- Background sync -->
-    <org.chromium.chrome.browser.preferences.website.SiteSettingsPreference
+    <!--<org.chromium.chrome.browser.preferences.website.SiteSettingsPreference
         android:fragment="org.chromium.chrome.browser.preferences.website.SingleCategoryPreferences"
-        android:key="background_sync" />
+        android:key="background_sync" />-->
     <!-- Protected content -->
     <org.chromium.chrome.browser.preferences.website.SiteSettingsPreference
         android:fragment="org.chromium.chrome.browser.preferences.website.SingleCategoryPreferences"
@@ -66,11 +66,11 @@
         android:fragment="org.chromium.chrome.browser.preferences.website.SingleCategoryPreferences"
         android:key="sound" />
     <!-- Google Translate -->
-    <Preference
+    <!-- <Preference
         android:fragment="org.chromium.chrome.browser.preferences.website.TranslatePreferences"
         android:key="translate"
         android:title="@string/google_translate"
-        android:icon="@drawable/settings_translate" />
+        android:icon="@drawable/settings_translate" />-->
     <!-- Storage -->
     <!-- TODO(finnur): Move this over to the new Usage screen, once it exists. -->
     <org.chromium.chrome.browser.preferences.website.SiteSettingsPreference
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/preferences/website/SiteSettingsPreferences.java b/chrome/android/java/src/org/chromium/chrome/browser/preferences/website/SiteSettingsPreferences.java
index 24b3a7d..dc1c609 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/preferences/website/SiteSettingsPreferences.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/preferences/website/SiteSettingsPreferences.java
@@ -38,7 +38,7 @@ public class SiteSettingsPreferences extends PreferenceFragment
     static final String ALL_SITES_KEY = "all_sites";
     static final String ADS_KEY = "ads";
     static final String AUTOPLAY_KEY = "autoplay";
-    static final String BACKGROUND_SYNC_KEY = "background_sync";
+    //static final String BACKGROUND_SYNC_KEY = "background_sync";
     static final String CAMERA_KEY = "camera";
     static final String CLIPBOARD_KEY = "clipboard";
     static final String COOKIES_KEY = "cookies";
@@ -51,7 +51,7 @@ public class SiteSettingsPreferences extends PreferenceFragment
     static final String PROTECTED_CONTENT_KEY = "protected_content";
     static final String SOUND_KEY = "sound";
     static final String STORAGE_KEY = "use_storage";
-    static final String TRANSLATE_KEY = "translate";
+    //static final String TRANSLATE_KEY = "translate";
     static final String USB_KEY = "usb";
 
     // Whether the Protected Content menu is available for display.
@@ -86,8 +86,8 @@ public class SiteSettingsPreferences extends PreferenceFragment
             return ContentSettingsType.CONTENT_SETTINGS_TYPE_ADS;
         } else if (AUTOPLAY_KEY.equals(key)) {
             return ContentSettingsType.CONTENT_SETTINGS_TYPE_AUTOPLAY;
-        } else if (BACKGROUND_SYNC_KEY.equals(key)) {
-            return ContentSettingsType.CONTENT_SETTINGS_TYPE_BACKGROUND_SYNC;
+        /*} else if (BACKGROUND_SYNC_KEY.equals(key)) {
+            return ContentSettingsType.CONTENT_SETTINGS_TYPE_BACKGROUND_SYNC;*/
         } else if (CAMERA_KEY.equals(key)) {
             return ContentSettingsType.CONTENT_SETTINGS_TYPE_MEDIASTREAM_CAMERA;
         } else if (CLIPBOARD_KEY.equals(key)) {
@@ -118,7 +118,7 @@ public class SiteSettingsPreferences extends PreferenceFragment
             // menus.
             getPreferenceScreen().removePreference(findPreference(ALL_SITES_KEY));
             getPreferenceScreen().removePreference(findPreference(ADS_KEY));
-            getPreferenceScreen().removePreference(findPreference(BACKGROUND_SYNC_KEY));
+            //getPreferenceScreen().removePreference(findPreference(BACKGROUND_SYNC_KEY));
             getPreferenceScreen().removePreference(findPreference(CAMERA_KEY));
             getPreferenceScreen().removePreference(findPreference(CLIPBOARD_KEY));
             getPreferenceScreen().removePreference(findPreference(COOKIES_KEY));
@@ -130,7 +130,7 @@ public class SiteSettingsPreferences extends PreferenceFragment
             getPreferenceScreen().removePreference(findPreference(POPUPS_KEY));
             getPreferenceScreen().removePreference(findPreference(SOUND_KEY));
             getPreferenceScreen().removePreference(findPreference(STORAGE_KEY));
-            getPreferenceScreen().removePreference(findPreference(TRANSLATE_KEY));
+            //getPreferenceScreen().removePreference(findPreference(TRANSLATE_KEY));
             getPreferenceScreen().removePreference(findPreference(USB_KEY));
         } else {
             // If both Autoplay and Protected Content menus are available, they'll be tucked under
@@ -156,9 +156,9 @@ public class SiteSettingsPreferences extends PreferenceFragment
             }
             // The new Languages Preference *feature* is an advanced version of this translate
             // preference. Once Languages Preference is enabled, remove this setting.
-            if (ChromeFeatureList.isEnabled(ChromeFeatureList.LANGUAGES_PREFERENCE)) {
+            /*if (ChromeFeatureList.isEnabled(ChromeFeatureList.LANGUAGES_PREFERENCE)) {
                 getPreferenceScreen().removePreference(findPreference(TRANSLATE_KEY));
-            }
+            }*/
         }
     }
 
@@ -166,10 +166,10 @@ public class SiteSettingsPreferences extends PreferenceFragment
         PrefServiceBridge prefServiceBridge = PrefServiceBridge.getInstance();
 
         // Translate preference.
-        Preference translatePref = findPreference(TRANSLATE_KEY);
+        /*Preference translatePref = findPreference(TRANSLATE_KEY);
         if (translatePref != null) {
             setTranslateStateSummary(translatePref);
-        }
+        }*/
 
         // Preferences that navigate to Website Settings.
         List<String> websitePrefs = new ArrayList<String>();
@@ -183,7 +183,7 @@ public class SiteSettingsPreferences extends PreferenceFragment
             // When showing the main menu, if Protected Content is not available, only Autoplay
             // will be visible.
             if (!mProtectedContentMenuAvailable) websitePrefs.add(AUTOPLAY_KEY);
-            websitePrefs.add(BACKGROUND_SYNC_KEY);
+            //websitePrefs.add(BACKGROUND_SYNC_KEY);
             websitePrefs.add(CAMERA_KEY);
             if (ChromeFeatureList.isEnabled(ChromeFeatureList.CLIPBOARD_CONTENT_SETTING)) {
                 websitePrefs.add(CLIPBOARD_KEY);
@@ -208,8 +208,8 @@ public class SiteSettingsPreferences extends PreferenceFragment
                 checked = PrefServiceBridge.getInstance().adsEnabled();
             } else if (AUTOPLAY_KEY.equals(prefName)) {
                 checked = PrefServiceBridge.getInstance().isAutoplayEnabled();
-            } else if (BACKGROUND_SYNC_KEY.equals(prefName)) {
-                checked = PrefServiceBridge.getInstance().isBackgroundSyncAllowed();
+            /*} else if (BACKGROUND_SYNC_KEY.equals(prefName)) {
+                checked = PrefServiceBridge.getInstance().isBackgroundSyncAllowed();*/
             } else if (CAMERA_KEY.equals(prefName)) {
                 checked = PrefServiceBridge.getInstance().isCameraEnabled();
             } else if (CLIPBOARD_KEY.equals(prefName)) {
diff --git a/headless/lib/browser/protocol/browser_handler.cc b/headless/lib/browser/protocol/browser_handler.cc
index 97ec5f5..955b233 100644
--- a/headless/lib/browser/protocol/browser_handler.cc
+++ b/headless/lib/browser/protocol/browser_handler.cc
@@ -71,7 +71,7 @@ Response BrowserHandler::Close() {
 Response BrowserHandler::SetWindowBounds(
     int window_id,
     std::unique_ptr<Browser::Bounds> window_bounds) {
-  HeadlessWebContentsImpl* web_contents = web_contents =
+  HeadlessWebContentsImpl* web_contents =
       browser()->GetWebContentsForWindowId(window_id);
   if (!web_contents)
     return Response::Error("Browser window not found");
-- 
2.7.4

