Author: csagan5 <32685696+csagan5@users.noreply.github.com>
Date:   Sat Jan 20 21:17:27 2018 +0100

    Compile ARM optimizations for H264
    Not only when running ChromeOS+ARM but for all ARM devices

diff --git a/content/renderer/media_recorder/h264_encoder.cc b/content/renderer/media_recorder/h264_encoder.cc
--- a/content/renderer/media_recorder/h264_encoder.cc
+++ b/content/renderer/media_recorder/h264_encoder.cc
@@ -149,11 +149,11 @@ void H264Encoder::ConfigureEncoderOnEncodingTaskRunner(const gfx::Size& size) {
     init_params.iRCMode = RC_OFF_MODE;
   }
 
-#if defined(OS_CHROMEOS)
-  init_params.iMultipleThreadIdc = 0;
-#else
+#if defined(OS_MACOSX)
   // Threading model: Set to 1 due to https://crbug.com/583348.
   init_params.iMultipleThreadIdc = 1;
+#else
+  init_params.iMultipleThreadIdc = 0;
 #endif
 
   // TODO(mcasas): consider reducing complexity if there are few CPUs available.
diff --git a/third_party/openh264/BUILD.gn b/third_party/openh264/BUILD.gn
--- a/third_party/openh264/BUILD.gn
+++ b/third_party/openh264/BUILD.gn
@@ -10,16 +10,22 @@ import("//third_party/yasm/yasm_assemble.gni")
 # Config shared by all openh264 targets.
 config("config") {
   cflags = []
+  defines = []
 
+  # HAVE_NEON and __chromeos__ are needed for enabling NEON on ChromeOS
+  # devices.
   if (is_chromeos && target_cpu == "arm") {
-    # HAVE_NEON and __chromeos__ are needed for enabling NEON on ChromeOS
-    # devices.
-    defines = [
-      "HAVE_NEON",
+    defines += [
       "__chromeos__",
     ]
   }
 
+  if (target_cpu == "arm") {
+    defines += [
+      "HAVE_NEON",
+    ]
+  }
+
   # GCC and clang flags. MSVS (is_win && !is_clang) does not use cflags.
   if (!is_win || is_clang) {
     cflags += [
@@ -123,7 +129,7 @@ if (use_assembler) {
 
 source_set("common") {
   sources = openh264_common_sources
-  if (is_chromeos && target_cpu == "arm") {
+  if (target_cpu == "arm") {
     sources += openh264_common_sources_asm_arm
   }
   include_dirs = openh264_common_include_dirs
@@ -149,7 +155,7 @@ source_set("common") {
 
 source_set("processing") {
   sources = openh264_processing_sources
-  if (is_chromeos && target_cpu == "arm") {
+  if (target_cpu == "arm") {
     sources += openh264_processing_sources_asm_arm
   }
   include_dirs = openh264_processing_include_dirs
@@ -168,7 +174,7 @@ source_set("processing") {
 
 source_set("encoder") {
   sources = openh264_encoder_sources
-  if (is_chromeos && target_cpu == "arm") {
+  if (target_cpu == "arm") {
     sources += openh264_encoder_sources_asm_arm
   }
   include_dirs = openh264_encoder_include_dirs
